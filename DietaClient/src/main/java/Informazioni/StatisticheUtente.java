package Informazioni;

import Informazioni.Campionamenti;
import Utente.Dashboard;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.knowm.xchart.CategoryChart;
import org.knowm.xchart.CategoryChartBuilder;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.XYChartBuilder;
import org.knowm.xchart.XYSeries.XYSeriesRenderStyle;
import org.knowm.xchart.style.Styler;
import org.knowm.xchart.style.Styler.ChartTheme;
import org.knowm.xchart.style.Styler.LegendPosition;

/**
 *
 * @author Bernardo and Paolo
 */
public class StatisticheUtente extends javax.swing.JFrame {

    private Campionamenti camp; 
    private final float[] RANGEIMC = {16.5f, 18.4f, 24.9f, 30f, 34.9f, 40f};
    /**
     * Creates new form StatisticheUtente
     */
    public StatisticheUtente() {
        initComponents();
        camp = new Campionamenti();
        informazioni.setVisible(false);
        setStatisticheMacronutrienti();
        setStatistichePeso();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        titolo1 = new javax.swing.JLabel();
        contenitore = new javax.swing.JPanel();
        titolo = new javax.swing.JLabel();
        peso = new javax.swing.JLabel();
        kg = new javax.swing.JLabel();
        campoPeso = new javax.swing.JSlider();
        inserisciBtn = new javax.swing.JButton();
        informazioni = new javax.swing.JPanel();
        ultimoPeso = new javax.swing.JLabel();
        imc = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        background.setBackground(new java.awt.Color(231, 76, 60));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titolo1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        titolo1.setForeground(new java.awt.Color(255, 255, 255));
        titolo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titolo1.setText("Statistiche utente");
        background.add(titolo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 50));

        contenitore.setOpaque(false);
        contenitore.setLayout(new java.awt.GridLayout(2, 0, 0, 10));
        background.add(contenitore, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 560, 370));

        titolo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        titolo.setForeground(new java.awt.Color(255, 255, 255));
        titolo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titolo.setText("Inserisci nuovo peso");
        background.add(titolo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 600, 40));

        peso.setForeground(new java.awt.Color(255, 255, 255));
        peso.setText("Peso");
        background.add(peso, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 540, -1, -1));

        kg.setForeground(new java.awt.Color(255, 255, 255));
        kg.setText("0 Kg");
        background.add(kg, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 540, -1, -1));

        campoPeso.setMaximum(150);
        campoPeso.setValue(0);
        campoPeso.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                campoPesoStateChanged(evt);
            }
        });
        background.add(campoPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 560, 350, 20));

        inserisciBtn.setText("Inserisci");
        inserisciBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inserisciBtnMouseClicked(evt);
            }
        });
        background.add(inserisciBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 590, 350, 40));

        informazioni.setOpaque(false);
        informazioni.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ultimoPeso.setForeground(new java.awt.Color(255, 255, 255));
        ultimoPeso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ultimoPeso.setText("Ultimo peso inserito: ");
        informazioni.add(ultimoPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 270, 40));

        imc.setForeground(new java.awt.Color(255, 255, 255));
        imc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imc.setText("IMC:");
        informazioni.add(imc, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 270, 40));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        informazioni.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 20, 40));

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        informazioni.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, -1));

        background.add(informazioni, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 600, 60));

        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        background.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 492, 600, 10));

        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoPesoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_campoPesoStateChanged
        kg.setText(campoPeso.getValue() + " kg");
    }//GEN-LAST:event_campoPesoStateChanged

    private void inserisciBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inserisciBtnMouseClicked
        String peso = "" + campoPeso.getValue();
        String msg = camp.inserisciNuovoPeso(peso);
        JOptionPane.showMessageDialog(null, msg, "Nuovo peso", JOptionPane.INFORMATION_MESSAGE);
        if(msg.equalsIgnoreCase("Peso inserito correttamente")) {
            StatisticheUtente su = new StatisticheUtente();
            su.setVisible(true);
            setVisible(false);  
        }
    }//GEN-LAST:event_inserisciBtnMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Dashboard dash = new Dashboard();
        dash.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    public String setStatisticheMacronutrienti() {
        String msg = camp.prendiCampionamenti();
        if(msg.equals("Campionamenti esistenti")) {
            final CategoryChart chart = new CategoryChartBuilder().title("Statistiche macronutrienti").xAxisTitle("Ultimi 10 campionamenti").yAxisTitle("Grammi").theme(ChartTheme.GGPlot2).build();
            
            chart.getStyler().setChartBackgroundColor(Color.yellow);
            
            double[] campionamentiMacronutrienti;
            if(camp.getSizeMacronutrienti() > 10) {
                campionamentiMacronutrienti = new double[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
            } else {
                campionamentiMacronutrienti = new double[camp.getSizeMacronutrienti()];
                for(int i = 0; i < camp.getSizeMacronutrienti(); i++) {
                    campionamentiMacronutrienti[i] = i;
                }
            }
            chart.addSeries("Proteine", campionamentiMacronutrienti, camp.getProteine());
            chart.addSeries("Carboidrati", campionamentiMacronutrienti, camp.getCarboidrati());
            chart.addSeries("Grassi", campionamentiMacronutrienti, camp.getGrassi());
  
            JPanel chartPanel = new XChartPanel(chart);
            contenitore.add(chartPanel);
            repaint();
        } else {
            JOptionPane.showMessageDialog(null, msg, "Campionamenti", JOptionPane.ERROR_MESSAGE);
            setVisible(false);
        }
        return msg;
    }
    
    public void setStatistichePeso() {
        String msg = camp.prendiCampionamentiPeso();
        if(msg.equals("Campionamenti esistenti")) {
            final CategoryChart chart = new CategoryChartBuilder().title("Statistiche peso").xAxisTitle("Ultimi 10 campionamenti").yAxisTitle("Kg").build();
            
            chart.getStyler().setHasAnnotations(true);
            chart.getStyler().setChartBackgroundColor(Color.ORANGE);
            
            double[] campionamentiPeso; 
            if(camp.getSizePeso() > 10) {
                campionamentiPeso = new double[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
            } else {
                campionamentiPeso = new double[camp.getSizePeso()];
                for(int i = 0; i < camp.getSizePeso(); i++) {
                    campionamentiPeso[i] = i;
                }
            }
            
            chart.addSeries("Peso", campionamentiPeso, camp.getPeso());
            
            JPanel chartPanel = new XChartPanel(chart);
            contenitore.add(chartPanel);
            
            int pesoAttuale = (int) camp.getPeso(0);
            float altezza = camp.getHeight() / 100;
            float indiceMassaCorporea = pesoAttuale / (altezza * altezza);
            ultimoPeso.setText("Ultimo peso inserito: " + pesoAttuale + " kg");
            imc.setText("IMC: " + indiceMassaCorporea + " (" + valutazioneImc(indiceMassaCorporea) + ")");
            informazioni.setVisible(true);
            repaint();
        } else {
            JOptionPane.showMessageDialog(null, msg, "Campionamenti", JOptionPane.ERROR_MESSAGE);
            setVisible(false);
        }
    }
    
    public String valutazioneImc(float x) {
        String msg = "Nessuna valutazione";
        if(x < RANGEIMC[0]) { //x < 16.5
            msg = "Sottopeso severo";
        } else if(x > RANGEIMC[0] && x <= RANGEIMC[1]) { // 16.5 < x <= 18.4
            msg = "Sottopeso";
        } else if(x > RANGEIMC[1] && x <= RANGEIMC[2]) { // 18.4 < x <= 24.9
            msg = "Normopeso";
        } else if(x > RANGEIMC[2] && x <= RANGEIMC[3]) { // 24.9 < x <= 30
            msg = "Sovrappeso";
        } else if(x > RANGEIMC[3] && x <= RANGEIMC[4]) { // 30 < x <= 34.9
            msg = "Obesità di primo grado";
        } else if(x > RANGEIMC[4] && x <= RANGEIMC[5]) { // 34.9 < x <= 40
            msg = "Obesità di secondo grado";
        } else if(x > RANGEIMC[5]) { // x > 40
            msg = "Obesità di terzo grado";
        }
        return msg;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatisticheUtente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatisticheUtente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatisticheUtente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatisticheUtente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatisticheUtente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JSlider campoPeso;
    private javax.swing.JPanel contenitore;
    private javax.swing.JLabel imc;
    private javax.swing.JPanel informazioni;
    private javax.swing.JButton inserisciBtn;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel kg;
    private javax.swing.JLabel peso;
    private javax.swing.JLabel titolo;
    private javax.swing.JLabel titolo1;
    private javax.swing.JLabel ultimoPeso;
    // End of variables declaration//GEN-END:variables
}
